{"version":3,"sources":["App.js","logo.svg","components/buttonComponent/button.js","components/previewerComponent/previewer.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","C_Users_HP_OneDrive_Documents_github_repos_javascript_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_HP_OneDrive_Documents_github_repos_javascript_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_HP_OneDrive_Documents_github_repos_javascript_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","arithmetic","answer","buttonClick","bind","C_Users_HP_OneDrive_Documents_github_repos_javascript_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","acClick","equalsClick","e","length","buttonId","target","id","buttonText","document","getElementById","textContent","includes","isNaN","setState","concat","startOperators","endOperators","solved","eval","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","src","logo","alt","_components_previewerComponent_previewer_js__WEBPACK_IMPORTED_MODULE_10__","arithmeticState","answerState","_components_buttonComponent_button_js__WEBPACK_IMPORTED_MODULE_9__","React","Component","module","exports","__webpack_require__","p","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Button","onClick","href","Previewer","Boolean","window","location","hostname","match","ReactDOM","render","react_default","App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bcf58797.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Button from './components/buttonComponent/button.js'\r\nimport Previewer from './components/previewerComponent/previewer.js'\r\n\r\n/* the parent component which save the arithmetic to be solved in the arithmetic state and assign the \r\nvalue to the answer state when the equals to button is clicked*/\r\nclass Home extends React.Component {\r\n   constructor(props){\r\n     super(props);\r\n\r\n     this.state = {\r\n       arithmetic : \"\",\r\n       answer : 0,\r\n     }\r\n\r\n     this.buttonClick = this.buttonClick.bind(this);\r\n     this.acClick = this.acClick.bind(this);\r\n     this.equalsClick = this.equalsClick.bind(this);\r\n   }\r\n  \r\n   /* all the buttons function which renders the button inner HTML through te getting of the button's id, \r\n   except from the AC and Equalsto button, it manages the length of the input too */\r\n  buttonClick(e){\r\n    let state = this.state.arithmetic;\r\n    let operators = ['+','/','*','-']\r\n    if(state.length < 22){\r\n      let buttonId = e.target.id;\r\n      let buttonText = document.getElementById(buttonId).textContent;\r\n      if(!operators.includes(state[state.length-1]) || !isNaN(buttonText)){\r\n        this.setState({\r\n        arithmetic: state.concat(buttonText)\r\n      });\r\n      }else{\r\n        this.setState({\r\n          arithmetic: state\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        arithmetic: this.state.arithmetic,\r\n        answer: \"Max Limit Reach!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  /* the AC button function that clears the arithmetic and answer state */\r\n  acClick(){\r\n    this.setState({\r\n      arithmetic: \"\",\r\n      answer: 0\r\n    });\r\n  }\r\n\r\n  /* the EqualsTo button function that solves the arithmetic in the state arithmetic when clicked with\r\n    the eval() function also manages any invalid maths expression */\r\n  equalsClick(){\r\n    let state = this.state.arithmetic;\r\n    let startOperators = ['/','*'];\r\n    let endOperators = ['+','/','*','-'];\r\n    if(startOperators.includes(state[0]) || endOperators.includes(state[state.length - 1])){\r\n      this.setState({\r\n        answer: \"Invalid Arithmetic\",\r\n        arithmetic: state\r\n      });\r\n    }else{\r\n      let solved = eval(this.state.arithmetic);\r\n      this.setState({\r\n        answer: solved,\r\n        arithmetic: state\r\n      });\r\n    }\r\n  }\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n        <h1 className=\"heading\"> <img src={logo} className=\"App-logo\" alt=\"logo\" /> Javascript Calculator</h1>\r\n          <div className=\"home-container\">\r\n            {/* rendering the imported functions the previewer(where the answers and maths expressions are\r\n              displayed) and the button(consist of all buttons) */}\r\n            <Previewer arithmeticState={this.state.arithmetic} answerState={this.state.answer}/>\r\n            <Button buttonClick={this.buttonClick} acClick={this.acClick} equalsClick={this.equalsClick} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n    return(\r\n        <div>\r\n        <div className=\"grid-container\">\r\n            <button id=\"ac\" className=\"ac\" onClick={props.acClick}>AC</button>\r\n            <button id=\"divide\" onClick={props.buttonClick}>/</button>\r\n            <button id=\"multiply\" onClick={props.buttonClick}>*</button>\r\n            <button id=\"seven\" onClick={props.buttonClick}>7</button>\r\n            <button id=\"eight\" onClick={props.buttonClick}>8</button>\r\n            <button id=\"nine\" onClick={props.buttonClick}>9</button>\r\n            <button id=\"minus\" onClick={props.buttonClick}>-</button>\r\n            <button id=\"four\" onClick={props.buttonClick}>4</button>\r\n            <button id=\"five\" onClick={props.buttonClick}>5</button>\r\n            <button id=\"six\" onClick={props.buttonClick}>6</button>\r\n            <button id=\"plus\" onClick={props.buttonClick}>+</button>\r\n            <button id=\"one\" onClick={props.buttonClick}>1</button>\r\n            <button id=\"two\" onClick={props.buttonClick}>2</button>\r\n            <button id=\"three\" onClick={props.buttonClick}>3</button>\r\n            <button id=\"zero\" onClick={props.buttonClick} className=\"zero\">0</button>\r\n            <button id=\"decimal\" onClick={props.buttonClick} className=\"decimal\">.</button>\r\n            <button id=\"equals\" onClick={props.equalsClick} className=\"equals\">=</button>\r\n        </div>\r\n        <p className=\"heading\">coded and designed by <a href=\"https://github.com/OLADIPO-K\">OLADIPO-K</a></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button","import React from 'react';\r\n\r\nconst Previewer = (props) => {\r\n    return(\r\n        <div className=\"previewer-container\">\r\n            <h3> {props.arithmeticState} </h3>\r\n            <h1 className=\"overflow\"> {props.answerState} </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Previewer","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}